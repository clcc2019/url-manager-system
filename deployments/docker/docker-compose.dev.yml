# Development environment with hot reload
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: url_manager
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../k8s/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 开发模式下直接运行源码，支持热重载
  backend-dev:
    image: golang:1.21-alpine
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      - DEBUG=true
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=url_manager
      - REDIS_ADDRESS=redis:6379
      - K8S_IN_CLUSTER=false
      - DEFAULT_DOMAIN=localhost
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../backend:/app
      - go_modules:/go/pkg/mod
    command: >
      sh -c "
        apk add --no-cache git &&
        go mod download &&
        go run cmd/server/main.go
      "
    restart: unless-stopped

  # 前端开发服务
  frontend-dev:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api/v1
    depends_on:
      - backend-dev
    volumes:
      - ../../frontend:/app
      - node_modules:/app/node_modules
    command: >
      sh -c "
        npm install &&
        npm run dev -- --host 0.0.0.0
      "
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  go_modules:
  node_modules: