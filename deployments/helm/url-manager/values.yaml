# URL Manager System Configuration

# Global configuration
global:
  storageClass: ""
  
# Backend configuration
backend:
  replicaCount: 1

  image:
    repository: ghcr.io/clcc2019/url-manager-system/backend
    pullPolicy: Always
    tag: "latest"
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  env:
    DEBUG: "false"
    
  config:
    server:
      port: "8080"
      host: "0.0.0.0"
    
    k8s:
      namespace: "default"
      in_cluster: true
      default_domain: "dslife.asia"
      ingress_class: "traefik"
    
    security:
      allowed_images:
        - "nginx:latest"
        - "nginx:1.21"
        - "httpd:latest"
        - "httpd:2.4"
        - "registry.example.com/"
      max_replicas: 3
      max_ttl_seconds: 604800  # 7 days
      default_cpu_limit: "500m"
      default_mem_limit: "512Mi"

# Frontend configuration
frontend:
  replicaCount: 1
  
  image:
    repository: ghcr.io/clcc2019/url-manager-system/frontend
    pullPolicy: Always
    tag: "latest"
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Ingress configuration
ingress:
  enabled: true
  className: "traefik"
  annotations: {}
  hosts:
    - host: url.dslife.asia
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api/v1
          pathType: Prefix
          service: backend
  tls:
    - hosts:
        - url.dslife.asia
      secretName: url-manager-tls

# PostgreSQL configuration (using Bitnami chart)
postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres"
    username: "postgres"
    password: "postgres"
    database: "url_manager"
  primary:
    persistence:
      storageClass: "local-path"
      enabled: true
      size: 10Gi

# Redis configuration (using Bitnami chart)
redis:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  replica:
    replicaCount: 1

# ServiceAccount configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC configuration
rbac:
  # 是否创建RBAC资源
  create: true
  # 使用ClusterRole还是Role (true=ClusterRole, false=Role)
  # ClusterRole允许跨命名空间操作，Role仅限当前命名空间
  useClusterRole: false

# Pod Security Context
podSecurityContext:
  fsGroup: 2000

# Security Context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Node selector, tolerations, and affinity
nodeSelector: {}

tolerations: []

affinity: {}

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: monitoring
    interval: 30s