apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "url-manager.fullname" . }}-backend
  labels:
    {{- include "url-manager.backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "url-manager.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "url-manager.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "url-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            - name: DEBUG
              value: {{ .Values.backend.env.DEBUG | default "false" | quote }}
            - name: DATABASE_HOST
              value: {{ include "url-manager.databaseHost" . }}
            - name: DATABASE_PORT
              value: {{ include "url-manager.databasePort" . | quote }}
            - name: DATABASE_USER
              value: {{ include "url-manager.databaseUser" . }}
            - name: DATABASE_PASSWORD
              value: {{ include "url-manager.databasePassword" . }}
            - name: DATABASE_NAME
              value: {{ include "url-manager.databaseName" . }}
            - name: REDIS_ADDRESS
              value: {{ include "url-manager.redisAddress" . }}
            - name: K8S_IN_CLUSTER
              value: {{ .Values.backend.config.k8s.in_cluster | quote }}
            - name: DEFAULT_DOMAIN
              value: {{ .Values.backend.config.k8s.default_domain | quote }}
          volumeMounts:
            - name: config
              mountPath: /config.yaml
              subPath: config.yaml
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "url-manager.fullname" . }}-backend-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}