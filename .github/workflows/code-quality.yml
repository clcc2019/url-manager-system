name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Go代码质量检查
  go-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      working-directory: ./backend
      run: go mod download

    - name: Run go vet
      working-directory: ./backend
      run: go vet ./...

    - name: Run staticcheck
      uses: dominikh/staticcheck-action@v1.3.0
      with:
        working-directory: ./backend
        install-go: false

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: ./backend
        args: --timeout=5m

    - name: Run tests with coverage
      working-directory: ./backend
      run: |
        go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.out
        flags: backend
        name: backend-coverage

  # 前端代码质量检查
  frontend-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint

    - name: Run TypeScript check
      working-directory: ./frontend
      run: npx tsc --noEmit

    - name: Run tests
      working-directory: ./frontend
      run: npm run test:coverage

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        name: frontend-coverage

  # 安全扫描
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Go安全扫描
    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec-results.sarif ./backend/...'

    - name: Upload Gosec results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: gosec-results.sarif
        category: gosec

    # 依赖漏洞扫描
    - name: Run Nancy (Go dependency scanner)
      working-directory: ./backend
      run: |
        go list -json -deps ./... | docker run --rm -i sonatypecommunity/nancy:latest sleuth

    # 前端安全扫描
    - name: Audit frontend dependencies
      working-directory: ./frontend
      run: npm audit --audit-level=high

  # 代码覆盖率报告
  coverage-report:
    needs: [go-quality, frontend-quality]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Comment PR with coverage
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '📊 代码覆盖率报告已生成，请查看 [Codecov](https://codecov.io/gh/${{ github.repository }}) 了解详细信息。'
          })